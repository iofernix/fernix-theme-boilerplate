version: 2.1
jobs:
    build:
        docker:
            - image: circleci/node:10.16

        steps:
            - checkout

            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "package.json" }}
                    - v1-dependencies-

            - run:
                name: Installing global dependencies
                command: sudo npm install -g gulp-cli

            - run:
                name: Installing local dependencies
                command: npm install

            - run:
                name: Building Theme
                command: gulp theme:build --minify

            - persist_to_workspace:
                root: .
                paths:
                    - build

            - save_cache:
                paths:
                    - node_modules
                key: v1-dependencies-{{ checksum "package.json" }}

    deploy:
        docker:
            - image: circleci/node:10.16

        steps:
            - checkout

            - add_ssh_keys:
                fingerprints:
                    - ${FNX_REMOTE_SSH_KEY}

            - attach_workspace:
                at: .

            - run:
                name: Installing global dependencies
                command: sudo npm install -g gulp-cli

            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "package.json" }}
                    - v1-dependencies-

            - run:
                name: Setup Environment Variables
                command: |
                    echo 'export USER_EMAIL="$(git log --format='%ae' -n 1 ${CIRCLE_SHA1})"' >> $BASH_ENV
                    echo 'export USER_NAME="$(git log --format='%an' -n 1 ${CIRCLE_SHA1})"' >> $BASH_ENV
                    echo 'export COMMIT_BUILD_NUM="$(git log --format='%h' -n 1 ${CIRCLE_SHA1})"' >> $BASH_ENV
                    echo 'export COMMIT_MESSAGE="$(git log --format='%s' -n 1 ${CIRCLE_SHA1})"' >> $BASH_ENV

            - run:
                name: Cloning WP Site
                command: |
                    git clone ${FNX_REMOTE_REPO} ./release
                    cd  ./release
                    git checkout -B ${CIRCLE_BRANCH}

            - run:
                name:  Deploying Theme
                command: |
                    gulp theme:deploy --path ./release

            - run:
                name: Pushing updates to stagging
                command: |
                    cd  ./release
                    git add --all
                    git config user.email "${USER_EMAIL}"
                    git config user.name "${USER_NAME}"
                    git diff-index --quiet HEAD || git commit -m "CircleCI Auto-Deploy
                    Build: ${COMMIT_BUILD_NUM}
                    Message: ${COMMIT_MESSAGE}"
                    git push origin ${CIRCLE_BRANCH} --force

    release:
        docker:
            - image: circleci/node:10.16

        steps:
            - checkout

            - add_ssh_keys:
                fingerprints:
                    - ${FNX_REMOTE_SSH_KEY}

            - attach_workspace:
                at: .

            - run:
                name: Installing global dependencies
                command: sudo npm install -g gulp-cli

            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "package.json" }}
                    - v1-dependencies-

            - run:
                name: Setup Environment Variables
                command: |
                    echo 'export USER_EMAIL="$(git log --format='%ae' -n 1 ${CIRCLE_SHA1})"' >> $BASH_ENV
                    echo 'export USER_NAME="$(git log --format='%an' -n 1 ${CIRCLE_SHA1})"' >> $BASH_ENV
                    echo 'export COMMIT_BUILD_NUM="$(git log --format='%h' -n 1 ${CIRCLE_SHA1})"' >> $BASH_ENV
                    echo 'export COMMIT_MESSAGE="$(git log --format='%s' -n 1 ${CIRCLE_SHA1})"' >> $BASH_ENV

            - run:
                name: Cloning WP Site
                command: |
                    git clone -b master ${FNX_REMOTE_REPO} ./release

            - run:
                name:  Deploying Theme
                command: |
                    gulp theme:deploy --path ./release

            - run:
                name: Creating the release
                command: |
                    cd  ./release
                    git add --all
                    git config user.email "${USER_EMAIL}"
                    git config user.name "${USER_NAME}"
                    git diff-index --quiet HEAD || git commit -m "CircleCI Automatic Release
                    Tag: ${CIRCLE_TAG}
                    Build: ${COMMIT_BUILD_NUM}
                    Message: ${COMMIT_MESSAGE}"
                    git tag ${CIRCLE_TAG}
                    git push origin master --force
                    git push origin ${CIRCLE_TAG}
                    git show-ref --quiet refs/heads/release/${CIRCLE_TAG} || git push origin --delete release/${CIRCLE_TAG}

    test-js:
        docker:
            - image: circleci/node:10.16

        steps:
            - checkout

            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "package.json" }}
                    - v1-dependencies-

            - run:
                name: Installing global dependencies
                command: sudo npm install -g gulp-cli

            - run:
                name: Installing local dependencies
                command: npm install

            - run:
                name: Testing JavaScript
                command: gulp lint:js

    test-css:
        docker:
            - image: circleci/node:10.16

        steps:
            - checkout

            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "package.json" }}
                    - v1-dependencies-

            - run:
                name: Installing global dependencies
                command: sudo npm install -g gulp-cli

            - run:
                name: Installing local dependencies
                command: npm install

            - run:
                name: Testing JavaScript
                command: gulp lint:css

    test-php:
        docker:
            - image: circleci/php:7.2-node-browsers

        steps:
            - checkout

            - run:
                name: Install Composer
                command: |
                    php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
                    php -r "if (hash_file('SHA384', 'composer-setup.php') === trim(file_get_contents('https://composer.github.io/installer.sig'))) { echo 'Installer verified'; } else { echo 'Installer invalid'; unlink('composer-setup.php'); } echo PHP_EOL;"
                    php composer-setup.php
                    php -r "unlink('composer-setup.php');"

            - run:
                name: Installing project dependencies
                command: |
                    php composer.phar require "squizlabs/php_codesniffer=*"
                    php composer.phar create-project wp-coding-standards/wpcs --no-dev

            - run:
                name: Setting Up & Running PHPCS
                command: |
                    ./vendor/bin/phpcs --config-set installed_paths wpcs
                    ./vendor/bin/phpcs --extensions=php --ignore=vendors --standard=WordPress src

workflows:
    version: 2
    test-build-and-deploy:
        jobs:
            - test-js:
                filters:
                    branches:
                        only:
                            - develop
                            - /^bugfix\/.*/
                            - /^feature\/.*/
                            - /^hotfix\/v.*/
                            - /^release\/v.*/
            - test-css:
                filters:
                    branches:
                        only:
                            - develop
                            - /^bugfix\/.*/
                            - /^feature\/.*/
                            - /^hotfix\/v.*/
                            - /^release\/v.*/
            - test-php:
                filters:
                    branches:
                        only:
                            - develop
                            - /^bugfix\/.*/
                            - /^feature\/.*/
                            - /^hotfix\/v.*/
                            - /^release\/v.*/
            - build:
                requires:
                    - test-js
                    - test-css
                    - test-php
                filters:
                    branches:
                        only:
                            - develop
                            - /^bugfix\/.*/
                            - /^feature\/.*/
                            - /^hotfix\/v.*/
                            - /^release\/v.*/
            - deploy:
                requires:
                    - build
                filters:
                    branches:
                        only:
                            - develop
                            - /^hotfix\/v.*/
                            - /^release\/v.*/
    build-and-release:
        jobs:
            - build:
                filters:
                    tags:
                        only: /v.*/
                    branches:
                        ignore: /.*/

            - release:
                requires:
                    - build
                filters:
                    tags:
                        only: /v.*/
                    branches:
                        ignore: /.*/
